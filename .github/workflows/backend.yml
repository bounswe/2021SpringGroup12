name: CD
on:
  push:
    branches: [ dev/backend ]
    paths: 
      - "application/backend/**"
  pull_request:
    branches: [ dev/backend ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  publish:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./application/backend
    
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: dev/backend
      - name: Setup JDK
        uses: actions/setup-java@v2.3.1
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: 'gradle'
      - name: Build image
        run: docker build . -t beabee/beabee_spring
      - name: Docker login
        uses: docker/login-action@v1.10.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push image to the repo
        run: |
            docker tag beabee/beabee_spring:latest beabeeapp/beabee
            docker push beabeeapp/beabee
  deploy:
    runs-on: ubuntu-latest
    needs: publish
    defaults:
      run:
        working-directory: ./application
        
    steps:
      - name: Write the SSH key to a temp file
        run: echo ${{ secrets.SSH_KEY }} > temp.pem
    
      - name: Copy docker-compose.yml into to EC2 instance with SCP.
        run: scp -i ./temp.pem ./docker-compose.yml ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/home/${{ secrets.SSH_USER }}
     
      - name: Login to Docker Hub at EC2 instance
        run: ssh -i ./temp.pem ./docker-compose.yml ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}" 
            
      - name: Down currently running BeABee application
        run: ssh -i ./temp.pem ./docker-compose.yml ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "docker-compose do
        
      - name: Run services with Docker Compose
        run: ssh -i ./temp.pem ./docker-compose.yml ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "docker-compose up"
  
      - name: Delete temp key file
        run: rm temp.pem
